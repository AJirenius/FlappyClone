local path = sys.get_save_file("flappy", "highscore")

local function load_highscore(self)
	
    local score_tbl = sys.load(path)
    if score_tbl.score == nil then
    	score_tbl.score = score or 0
    end
    gui.set_text(self.highscore_txt, tostring(score_tbl.score))
    return score_tbl.score
end

function init(self)  
    self.score = 0
    msg.post(".", "acquire_input_focus") 
    self.start_btn = gui.get_node("start_btn")
    self.start_btn_enabled = true
    self.highscore_txt = gui.get_node("high_score")
    self.score_txt = gui.get_node("score")
    gui.set_enabled(self.score_txt, false)
    
    load_highscore(self)
       
end



local function save_highscore(self, score)
	local phs = load_highscore(self)
	print("phs:", phs, "score:",score)
    if score > phs then
    	gui.set_text(self.highscore_txt, tostring(score))
    	sys.save(path, { score = score })
    end
end

function on_message(self, message_id, message, sender)
	print("message:",message_id)
    if message_id == hash("add_score") then
    	self.score = self.score + message.score
    	gui.set_text(self.score_txt, tostring(self.score))
    	save_highscore(self, self.score)
    elseif message_id == hash("reset") then
    	gui.set_enabled(self.start_btn, true)
    	self.start_btn_enabled = true
    end
end

function on_input(self, action_id, action, sender)
	if action_id == hash("touch") and action.pressed then
		if gui.pick_node(self.start_btn, action.x, action.y) and self.start_btn_enabled == true then
			msg.post("/ground", "start_game")
			msg.post("/bird", "start_game")
			msg.post("/bird", "flap")
			gui.set_enabled(self.score_txt, true)
			gui.set_enabled(self.start_btn, false)
			self.start_btn_enabled = false
		end
	end
end
